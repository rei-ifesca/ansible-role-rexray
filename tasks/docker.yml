---

- name: Check if Docker DOBS plugin installed
  shell: docker plugin ls | grep "dobs"
  register: dobs_installed
  failed_when: "'FAILED' in dobs_installed.stderr"

- name: Create Docker plug-ins folder
  file:
    path: /etc/docker/plug-ins
    state: directory

- name: Add Docker config file
  template:
    src: docker.spec.j2
    dest: /etc/docker/plug-ins/rexray.spec
  notify:
    - restart docker

- name: Install Docker dobs driver
  shell: echo y | docker plugin install rexray/dobs
  when:
      - rexray_dobs_token is defined
      - dobs_installed.rc == 1
  notify:
      - restart docker

- name: Disable Docker dobs driver for setting params
  shell: docker plugin disable rexray/dobs
  when:
      - rexray_dobs_token is defined
      - dobs_installed.rc == 1

# Environment directive on command above didn't work for me
- name: Set Docker dobs plugin params
  shell: docker plugin set rexray/dobs {{ item.name }}={{ item.value }}
  with_items:
      - { name: "DOBS_REGION", value: "{{ rexray_dobs_region }}" }
      - { name: "DOBS_TOKEN", value: "{{ rexray_dobs_token }}" }
      - { name: "DOBS_CONVERTUNDERSCORES", value: "{{ rexray_dobs_convert_underscores }}" }
      - { name: "DOBS_STATUSINITIALDELAY", value: "{{ rexray_dobs_status_initial_delay  }}" }
      - { name: "DOBS_STATUSMAXATTEMPTS", value: "{{ rexray_dobs_status_max_attempts }}" }
      - { name: "DOBS_STATUSTIMEOUT", value: "{{ rexray_dobs_status_timeout }}" }
      - { name: "REXRAY_PREEMPT", value: "{{ rexray_volume_preempt }}" }
      - { name: "DOCKER_LEGACY", value: "{{ rexray_docker_legacy }}" }
      - { name: "HTTP_PROXY", value: "{{ rexray_dobs_http_proxy }}" }
  when:
      - rexray_dobs_token is defined
      - dobs_installed.rc == 1

- name: Enable Docker dobs driver
  shell: docker plugin enable rexray/dobs
  when:
      - rexray_dobs_token is defined
      - dobs_installed.rc == 1
